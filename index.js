var express = require("express");
var mongoose = require("mongoose");
var methodOverride = require("method-override");
var flash = require("connect-flash");
var session = require("express-session");
var bodyParser = require("body-parser");
var passport = require("./config/passport");
var util = require("./config/util");
var https = require("https");
var fs = require("fs");
var app = express();

// DB setting
mongoose.connect("mongodb://localhost:27017/db");
var db = mongoose.connection;
db.once("open", function () {
  console.log("DB connected");
});
db.on("error", function (err) {
  console.log("DB ERROR : ", err);
});

// Other settings
app.set("views", __dirname + "/views");
app.set("view engine", "ejs");
app.use(express.static(__dirname + "/public"));
app.use("/uploadedFiles", express.static(__dirname + "/uploadedFiles"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(methodOverride("_method"));
app.use(flash());

// Session
app.use(
  session({
    name: "login-session",
    secret: "pentesting",
    resave: true,
    saveUninitialized: true,
    cookie: { secure: true },
  })
);

// Passport
app.use(passport.initialize());
app.use(passport.session());

// Custom Middlewares
app.use(function (req, res, next) {
  // Use in ejs - res.locals
  res.locals.isAuthenticated = req.isAuthenticated();
  res.locals.currentUser = req.user;
  res.locals.util = util;
  next();
});

// Routes
app.use("/", require("./routes/home"));
app.use("/intro", require("./routes/intro"));
app.use("/about", require("./routes/about"));
app.use("/admin", require("./routes/admin"));
app.use("/posts", util.getPostQueryString, require("./routes/posts"));
app.use("/users", require("./routes/users")); //hidden page
app.use("/files", require("./routes/files"));

var options = {
  key: fs.readFileSync("./key/key.pem", "utf-8"),
  cert: fs.readFileSync("./key/cert.pem", "utf-8"),
};

https.createServer(options, app).listen(3334, () => {
  console.log("HTTPS Server 3334");
});
